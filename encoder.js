
exports.encode = function(fel, to)
{
	const table = [
		//src   code ipa                         ipa-unicode           xsampa
		[ 'ae', 'æ', '&#x025B;&#x026A;',         '\u025B\u026A',       'EI'      ],
		[ 'ah', 'à', '&#x0250;&#x0306;',         '\u0250\u0306',       '6_X'     ],
		[ 'ai', 'â', '&#x0061;&#x026A;',         '\u0061\u026A',       'aI'      ],
		[ 'ch', 'C', '&#x0074;&#x0283;',         '\u0074\u0283',       'tS'      ],
		[ 'fh', 'F', '&#x0076;',                 '\u0076',             'v'       ],
		[ 'gr', 'G', '&#x0261;&#x0361;&#x0280;', '\u0261\u0361\u0280', 'g-\\R\\' ],
		[ 'hr', 'H', '&#x0068;&#x0361;&#x027E;', '\u0068\u0361\u027E', 'h-\\4'   ],
		[ 'ia', 'Á', '&#x026A;&#x0306;&#x0250;', '\u026A\u0306\u0250', 'I_X6'    ],
		[ 'ie', 'É', '&#x0069;',                 '\u0069',             'i'       ],
		[ 'kh', 'K', '&#x006B;',                 '\u006B',             'k'       ],
		[ 'mr', 'M', '&#x006D;&#x0361;&#x027E;', '\u006D\u0361\u027E', 'm-\\4'   ],
		[ 'rh', 'R', '&#x0072;',                 '\u0072',             'r'       ],
		[ 'th', 'þ', '&#x0278;',                 '\u0278',             'T'       ],
		[ 'a',  'a', '&#x0250;',                 '\u0250',             '6'       ],
		[ 'b',  'b', '&#x0062;',                 '\u0062',             'b'       ],
		[ 'd',  'd', '&#x0064;',                 '\u0064',             'd'       ],
		[ 'e',  'e', '&#x0259;',                 '\u0259',             '@'       ],
		[ 'f',  'f', '&#x0066;',                 '\u0066',             'f'       ],
		[ 'h',  'h', '&#x0068;',                 '\u0068',             'h'       ],
		[ 'i',  'i', '&#x026A;',                 '\u026A',             'I'       ],
		[ 'k',  'k', '&#x0063;',                 '\u0063',             'c'       ],
		[ 'l',  'l', '&#x006C;',                 '\u006C',             'l'       ],
		[ 'm',  'm', '&#x006D;',                 '\u006D',             'm'       ],
		[ 'n',  'n', '&#x006E;',                 '\u006E',             'n'       ],
		[ 'o',  'o', '&#x006F;',                 '\u006F',             'o'       ],
		[ 'p',  'p', '&#x0070;',                 '\u0070',             'p'       ],
		[ 'r',  'r', '&#x027E;',                 '\u027E',             '4'       ],
		[ 's',  's', '&#x0073;',                 '\u0073',             's'       ],
		[ 't',  't', '&#x0074;',                 '\u0074',             't'       ],
		[ 'u',  'u', 'u',                        'u',                  'u'       ],
		[ 'v',  'v', '&#x03B2;',                 '\u03B2',             'B'       ],
		[ 'w',  'w', '&#x028B;',                 '\u028B',             'v\\'     ],
		[ '\'', '' , '',                         '',                   ''        ],
		[ '-',  '' , '.',                        '.',                  '.'       ],
	];

	var ret = '';
	if (to == 2) ret = '&lt;';
	else if (to == 3) ret = '<';
	while (fel.length)
	{
		var found = false;
		for (var i = 0; i < table.length; i++)
		{
			var r = table[i];
			if (fel.startsWith(r[0]))
			{
				fel = fel.slice(r[0].length);
				ret += r[to];
				found = true;
				break;
			}
		}
		if (!found)
		{
			ret += fel[0];
			fel = fel.slice(1);
		}
	}
	if (to == 2) ret += '&gt;';
	else if (to == 3) ret += '>';
	return ret;
}
